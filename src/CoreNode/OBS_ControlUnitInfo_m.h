//
// Generated file, do not edit! Created by nedtool 4.6 from src/CoreNode/OBS_ControlUnitInfo.msg.
//

#ifndef _OBS_CONTROLUNITINFO_M_H_
#define _OBS_CONTROLUNITINFO_M_H_

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0406
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>src/CoreNode/OBS_ControlUnitInfo.msg:30</tt> by nedtool.
 * <pre>
 * //
 * // Self-message used in OBS_CoreControlUnit to schedule OXC connections/disconnections.
 * //
 * // This message kind can take two values:
 * //
 * // - OBS_SCHEDULE_OXC (1)
 * // - OBS_UNSCHEDULE_OXC (2): In this case, only inGate field will be read
 * //
 * message OBS_ControlUnitInfo
 * {
 *     int inGate = -1; // OXC input gate
 *     int outGate = -1; //OXC output gate
 * }
 * </pre>
 */
class OBS_ControlUnitInfo : public ::cMessage
{
  protected:
    int inGate_var;
    int outGate_var;

  private:
    void copy(const OBS_ControlUnitInfo& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const OBS_ControlUnitInfo&);

  public:
    OBS_ControlUnitInfo(const char *name=NULL, int kind=0);
    OBS_ControlUnitInfo(const OBS_ControlUnitInfo& other);
    virtual ~OBS_ControlUnitInfo();
    OBS_ControlUnitInfo& operator=(const OBS_ControlUnitInfo& other);
    virtual OBS_ControlUnitInfo *dup() const {return new OBS_ControlUnitInfo(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual int getInGate() const;
    virtual void setInGate(int inGate);
    virtual int getOutGate() const;
    virtual void setOutGate(int outGate);
};

inline void doPacking(cCommBuffer *b, OBS_ControlUnitInfo& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, OBS_ControlUnitInfo& obj) {obj.parsimUnpack(b);}


#endif // ifndef _OBS_CONTROLUNITINFO_M_H_


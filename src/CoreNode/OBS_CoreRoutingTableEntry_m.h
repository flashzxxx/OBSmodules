//
// Generated file, do not edit! Created by nedtool 4.6 from src/CoreNode/OBS_CoreRoutingTableEntry.msg.
//

#ifndef _OBS_COREROUTINGTABLEENTRY_M_H_
#define _OBS_COREROUTINGTABLEENTRY_M_H_

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0406
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>src/CoreNode/OBS_CoreRoutingTableEntry.msg:27</tt> by nedtool.
 * <pre>
 * //
 * // Represents an entry of the Core node routing table.
 * //
 * // Used on OBS_CoreRoutingTable.
 * //
 * class OBS_CoreRoutingTableEntry
 * {
 *     int inPort = -1; //Input port
 *     int inColour = -1; //Input colour
 *     int inLabel = -1; //Input label
 *     int outPort = -1; //Output port
 *     int outColour = -1; //Output colour
 *     int outLabel = -1; //Output label
 * }
 * </pre>
 */
class OBS_CoreRoutingTableEntry : public ::cObject
{
  protected:
    int inPort_var;
    int inColour_var;
    int inLabel_var;
    int outPort_var;
    int outColour_var;
    int outLabel_var;

  private:
    void copy(const OBS_CoreRoutingTableEntry& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const OBS_CoreRoutingTableEntry&);

  public:
    OBS_CoreRoutingTableEntry();
    OBS_CoreRoutingTableEntry(const OBS_CoreRoutingTableEntry& other);
    virtual ~OBS_CoreRoutingTableEntry();
    OBS_CoreRoutingTableEntry& operator=(const OBS_CoreRoutingTableEntry& other);
    virtual OBS_CoreRoutingTableEntry *dup() const {return new OBS_CoreRoutingTableEntry(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual int getInPort() const;
    virtual void setInPort(int inPort);
    virtual int getInColour() const;
    virtual void setInColour(int inColour);
    virtual int getInLabel() const;
    virtual void setInLabel(int inLabel);
    virtual int getOutPort() const;
    virtual void setOutPort(int outPort);
    virtual int getOutColour() const;
    virtual void setOutColour(int outColour);
    virtual int getOutLabel() const;
    virtual void setOutLabel(int outLabel);
};

inline void doPacking(cCommBuffer *b, OBS_CoreRoutingTableEntry& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, OBS_CoreRoutingTableEntry& obj) {obj.parsimUnpack(b);}


#endif // ifndef _OBS_COREROUTINGTABLEENTRY_M_H_

